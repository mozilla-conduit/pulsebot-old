version: 2
jobs:
  test:
    docker:
      - image: docker:stable-git
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Docker Compose
          command: |
            apk update && apk add py-pip gcc python3-dev musl-dev \
              libffi-dev openssl-dev make
            pip install docker-compose
          environment:
            CRYPTOGRAPHY_DONT_BUILD_RUST: 1
      - run:
          name: Build Docker Image
          command: docker-compose build
      - run:
          name: Test Code
          command: |
            docker-compose run pulsebot -m unittest \
            pulsebot.pulse_dispatch pulsebot.pulse_hgpushes

  deploy:
    docker:
      - image: docker:stable-git
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -t pulsebot .
      - deploy:
          command: |
            [ -n "$DOCKERHUB_REPO" && -n "$DOCKER_USER" && -n "$DOCKER_PASS" ] || exit 0
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            # deploy main
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              docker tag pulsebot ${DOCKERHUB_REPO}:latest
              docker push ${DOCKERHUB_REPO}:latest
            elif  [ ! -z "${CIRCLE_TAG}" ]; then
            # deploy a release tag...
              echo "${DOCKERHUB_REPO}:${CIRCLE_TAG}"
              docker tag pulsebot "${DOCKERHUB_REPO}:${CIRCLE_TAG}"
              docker images
              docker push "${DOCKERHUB_REPO}:${CIRCLE_TAG}"
            fi

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/

      - deploy:
          requires:
            - test
          filters:
            tags:
              only: /.*/
            branches:
              only: main
